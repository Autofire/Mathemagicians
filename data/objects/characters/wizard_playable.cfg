# Ember; main player character

{

#DEFINES#
id: "wizard_playable",
prototype: ["player_controlled"],
editor_info: { category: "Characters" },
solid_dimensions: ["player","common","boss"],
collide_dimensions: ["common","enemy","boss"],
vehicle: false,
hitpoints: 20,
mass: 5,
is_human: true,
friction: 22000,
feet_width: 5,

zorder: "@include data/zorder.cfg:player",

properties: {
	walkspeed: "500",
	runspeed: { type: "int", default: 600 },
	
	airspeed: { type: "int", default: 30 },
	jump_power: { type: "int", default: -500 },
	
	flinch_threshold: 0,
	hurt_velocity_y: "-1100",
	hurt_velocity_x: "250",
	jumpticks: { type: "int", default: 0 },
	cycle_of_last_up: { type: "int", default: 0 },
	
	team: "'player'",
	
	# -- gui -- #
	gui_heart_display: {
		type: "obj heart_display",
		init: "object('heart_display', 27+0, 27+0, {})",
		persistent: false,
	},
	
	set_up_gui: "def() -> commands [
		map(components,
			'gui_element', [
				remove_object(gui_element),
				add_object(gui_element),
			]
		) where components = [gui_heart_display]
	]",
		
		
	# -- functions -- #

			# Overloading (from hittable) because we want to flinch in air #
	handle_flinch: "def(obj hittable collide_with) -> commands
			execute(me, if(final_damage_amount(collide_with, collide_with.attack_damage) >= flinch_threshold, cause_flinch(collide_with)))",
},

#ANIMATION HANDLES#
on_create: "[animation('stand'),
			set_up_gui(),
			set(facing, 1)]",	// No flipping! Must always face the same direction
on_end_stand_anim: "animation('stand')",

# -- stuff that is related to the player's input follows
on_process: "[
			if(ctrl_up = true, set(velocity_y, -walkspeed)),
			if(ctrl_down = true, set(velocity_y, walkspeed)),
			if(ctrl_left = true, set(velocity_x, -walkspeed)),
			if(ctrl_right = true, set(velocity_x, walkspeed)),
			debug(velocity_x),
			]",

on_process_run: "if(not (ctrl_left or ctrl_right),
					animation('stand'))",
on_end_run_anim: "animation('run')",
on_end_hurt_anim: "animation('stand')",

# -- Jumping and falling -- #
on_ctrl_jump: "if(cycle_of_last_up + 20 < cycle,
			set(cycle_of_last_up, cycle),
			speech_dialog(level.player,
		[~No info for you!~],
		))",

#ANIMATIONS#
animation: [
	{
		id: "stand",
		body_area: "all",
		image: "characters/wiz-blue.png",
		rect: [3, 3, 27, 27],
		solid_area: [1,1,18,29],
		frames: 1,
		frames_per_row: 8,
		pad: 3,
		duration: 6,
	},
	
	{
		id: "run",
		body_area: "all",
		image: "characters/wiz-blue.png",
		rect: [3, 3, 27, 27],
		solid_area: [1,1,18,29],
		frames: 1,
		frames_per_row: 1,
		duration: 1,
	},
	
],

}
