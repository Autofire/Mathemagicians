# magician_shooter.cfg
# One of Smoke's mirrors; shoots at player
#
# Notes: With the current, 10x10 hurtbox, there are 10 units from
# one edge of a wall to another in the x and y directions.
# (If the walls have a single tile between them.)

{

#DEFINES#
id: "magician_shooter",
prototype: ["hittable"],
editor_info: { category: "Characters" },
solid_dimensions: ["player","boss"],
collide_dimensions: ["enemy","boss"],
vehicle: false,
has_feet: false,
feet_width: null,
hitpoints: 4,
max_hitpoints: 10,
mass: 5,
friction: 32000,

zorder: "@include data/zorder.cfg:player",

properties: {
	walkspeed: 300,
	movespeed: "walkspeed",
	attack_damage: 1,
	//movespeed: 3,	
	team: "'evil'",
	
	flinch_threshold: 0,
	cycle_of_last_action: { type: 'int', default: 0 },
	hurt_velocity_y: "0",
	hurt_velocity_x: "0",
	
	# -- AI/player interactions -- #
	// Overloading
	launch_x: "def(int velocity) -> int
		if(far_dir_to_player = 'right', velocity,
		   far_dir_to_player = 'left', -velocity,
		   0)",
	launch_y: "def(int velocity) -> int
		if(far_dir_to_player = 'down', velocity,
		   far_dir_to_player = 'up', -velocity,
		   0)",	
	
	is_player_behind: "bool :: if(
		facing_down, me.midpoint_y-level.player.midpoint_y > 16,
		facing_up, me.midpoint_y-level.player.midpoint_y < 16,
		facing_right, me.midpoint_x-level.player.midpoint_x > 16,
		facing_left, me.midpoint_x-level.player.midpoint_x < 16,
		true)", // Default if none of the others
	
	change_anim: "def(string anim) -> commands
		if(anim != animation, animation(anim))",
	
	is_vision_obstructed: "bool(solid(level, midpoint_x,midpoint_y,level.player.midpoint_x-midpoint_x,level.player.midpoint_y-midpoint_y))",
	is_player_visible: "not is_vision_obstructed and not is_player_behind",
	x_dist: "me.midpoint_x - level.player.midpoint_x",
	y_dist: "me.midpoint_y - level.player.midpoint_y",
	near_dir_to_player: "string :: if(abs(x_dist) < abs(y_dist),
		if(x_dist < 0, 'right', 'left'),
		if(y_dist < 0, 'down', 'up'))",
	far_dir_to_player: "string :: if(abs(x_dist) > abs(y_dist),
		if(x_dist < 0, 'right', 'left'),
		if(y_dist < 0, 'down', 'up'))",
	
	
	is_on_lens: "false",	// Placeholder
	
	is_lined_up_to_attack: "abs(x_dist) <= 32 or abs(y_dist) <= 32",
	cycle_of_last_attack: { type: 'int', default: 0 },
	attack_cooldown: "100",
	is_attack_on_cooldown: "false", // Placeholder
	
	begin_attack: "fire_event('attack')",	// Placeholder
	// If we can actually see player, then walk towards player. Otherwise, try shortest route.
	track_player: "try_dir(
		if(is_vision_obstructed, far_dir_to_player, near_dir_to_player))",
		
	avail_dir: "[string] :: if(
		facing_down,  ['left','right','down'],
		facing_up,    ['left','right','up'],
		facing_right, ['right','up','down'], 
		facing_left,  ['left','up','down'],
		['left','right','down'])", // Default if none of the others
	new_dir: "_new_dir(1d3-1)",
	_new_dir: "def(int rand) -> commands 
		if(solid_dir(avail_dir[rand]),
			new_dir, // Repeat until we get something valid
			change_anim('walk_'+avail_dir[rand]))",
	
	any_new_dir: "_any_new_dir(1d4-1)",
	_any_new_dir: "def(int rand) -> commands 
		if(solid_dir(any_dir[rand]),
			any_new_dir, // Repeat until we get something valid
			change_anim('walk_'+any_dir[rand]))
		where any_dir = ['left','right','down','up']",
	
	try_dir: "def(string dir) -> commands
		if(solid_dir(dir), new_dir, change_anim('walk_${dir}'))",
	
},	#### EVENTS START HERE ####

on_create: "[animation('look_down'),
			set(facing, 1),	// No flipping! Must always face the same direction
			align_self,
			set(old_midpoint_x, midpoint_x),
			set(old_midpoint_y, midpoint_y)]",
on_first_cycle: "[align_self, new_dir]",

# -- Animations Logic -- #
on_process: "[
	if(is_standing, add(y,-1)), // This is a workaround for a glitch
	if(is_walking, fire_event('process_walk')),
	if(abs(midpoint_x - old_midpoint_x) >= 32 or
	   abs(midpoint_y - old_midpoint_y) >= 32, [
		set(old_midpoint_x, midpoint_x),
		set(old_midpoint_y, midpoint_y),
		set(cycle_of_last_action, cycle),
		if(facing_up or facing_down, align_self_x),		
		if(facing_left or facing_right, align_self_x),
		if(is_player_visible or is_on_lens,
			if(is_lined_up_to_attack and not is_attack_on_cooldown,
				begin_attack,
				[track_player, debug('hi')]),
			new_dir)	// Do this if we cannot see player
		] // We should be walking via animation
	)]",

on_end_look_down_anim: "animation('walk_down')",
on_end_look_up_anim: "animation('walk_up')",
on_end_look_right_anim: "animation('walk_right')",
on_end_look_left_anim: "animation('walk_left')",

/*on_process_walk_up: "set(velocity_y, -movespeed)",
on_process_walk_down: "set(velocity_y, movespeed)",
on_process_walk_right: "set(velocity_x, movespeed)",
on_process_walk_left: "set(velocity_x, -movespeed)",*/

	// Keep us from getting stuck
on_process_walk: "if(cycle - cycle_of_last_action > 40,
	[align_self, any_new_dir, set(cycle_of_last_action, cycle)])",
	
on_process_walk_up: "add(midpoint_y, -2)",
on_process_walk_down: "add(midpoint_y, 2)",
on_process_walk_right: "add(midpoint_x, 2)",
on_process_walk_left: "add(midpoint_x, -2)",

on_end_walk_up_anim: "animation('walk_up')",
on_end_walk_down_anim: "animation('walk_down')",
on_end_walk_right_anim: "animation('walk_right')",
on_end_walk_left_anim: "animation('walk_left')",

/*on_process_run: "if(not (ctrl_left or ctrl_right),
					animation('stand'))",

on_end_hurt_anim: "animation('stand')",*/

on_attack: "[
	animation('cast_'+far_dir_to_player),
	schedule(1,
		spawn('magician_shooter.firebolt', midpoint_x, midpoint_y, facing,
			[set(child.velocity_x, launch_x(750)),
			set(child.velocity_y, launch_y(750))])
		)
	]",

on_end_cast_down_anim: "animation('look_down')",
on_end_cast_up_anim: "animation('look_up')",
on_end_cast_right_anim: "animation('look_right')",
on_end_cast_left_anim: "animation('look_left')",

# -- Info and Time Attack -- #
/*on_ctrl_jump: "if(cycle_of_last_up + 20 < cycle,
			set(cycle_of_last_up, cycle),*/
			
#ANIMATIONS#
animation: [

	# -- Walking and Looking -- #
	{
		id: "look_down",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [90, 3, 115, 27],
		solid_area: [7,14,17,24],
		frames: 1,
		frames_per_row: 8,
		pad: 3,
		duration: 6,
	},

	{
		id: "look_up",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [208, 3, 233, 28],
		solid_area: [7,14,17,24],
		frames: 1,
		pad: 3,
		frames_per_row: 4,
		duration: 8,
	},
	
	{
		id: "look_right",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [90, 34, 115, 59],
		solid_area: [6,14,16,24],
		frames: 1,
		pad: 3,
		frames_per_row: 4,
		duration: 8,
	},

	{
		id: "look_left",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [150, 34, 175, 59],
		solid_area: [9,14,19,24],
		frames: 1,
		pad: 3,
		frames_per_row: 4,
		duration: 8,
	},
	
	{
		id: "walk_down",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [3, 3, 28, 28],
		solid_area: [7,14,17,24],
		attack_area: [6,13,18,25],
		frames: 4,
		pad: 3,
		frames_per_row: 4,
		duration: 9,
	},
	
	{
		id: "walk_up",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [121, 3, 146, 28],
		solid_area: [7,14,17,24],
		attack_area: [6,13,18,25],
		frames: 4,
		pad: 3,
		frames_per_row: 4,
		duration: 9,
	},

	{
		id: "walk_right",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [3, 34, 28, 59],
		solid_area: [6,14,16,24],	
		attack_area: [5,13,17,25],
		frames: 4,
		pad: 3,
		frames_per_row: 4,
		duration: 9,
	},
	
	{
		id: "walk_left",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [121, 34, 146, 59],
		solid_area: [9,14,19,24],
		attack_area: [8,13,20,25],
		frames: 4,
		pad: 3,
		frames_per_row: 4,
		duration: 9,
	},

	# -- Magic Weilding -- #			
	{
		id: "cast_down",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [61, 65, 86, 90],
		solid_area: [7,14,17,24],
		frames: 1,
		pad: 3,
		frames_per_row: 3,
		duration: 12,
	},
	
	{
		id: "cast_up",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [150, 65, 175, 90],
		solid_area: [7,14,17,24],
		frames: 1,
		pad: 3,
		frames_per_row: 3,
		duration: 12,
	},
	
	{
		id: "cast_right",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [61, 94, 86, 119],
		solid_area: [6,14,16,24],
		frames: 1,
		pad: 3,
		frames_per_row: 3,
		duration: 12,
	},
	
	{
		id: "cast_left",
		body_area: "all",
		image: "characters/magician_purple.png",
		rect: [150, 94, 175, 119],
		solid_area: [9,14,19,24],
		frames: 1,
		pad: 3,
		frames_per_row: 3,
		duration: 12,
	},
],

object_type: [
	{
	id: "firebolt",
	dies_on_inactive: true,
	timer_frequency: 450,
	object_level_collisions: true,
	solid_dimensions: ["player"],
	collide_dimensions: ["player"],
	prototype: ["shot"],
	properties: {
	        attack_damage: "2",
	        team: "'evil'",
	},

	on_end_normal_anim: "animation('normal')",
	on_process: "if((time_in_animation%7) = 0, spawn('mage_playable.firebolt_trail',midpoint_x,midpoint_y,{velocity_x:0,velocity_y:0}))",
	on_end_flash_anim: "die()",
	on_timer: "die()",

	animation:
		{
		id: "normal",
		image: "effects/magic_fire.png",
		attack_area: [0,0,11,11],
		pad: 3,
		rect: [2,2,10,10],
		frames: 4,
		frames_per_row: 4,
		duration: 5
	    },
	},


	{
	id: "firebolt_trail",
	ignore_collide: true,
	on_end_normal_anim: "die()",
    
	zorder: 50,
	dies_on_inactive: true,
	on_spawned: "animation('normal')",

	animation:
	    {
		id: "normal",
		image: "effects/magic_fire.png",
		pad: 3,
		rect: [2, 14, 6, 18],
		frames: 4,
		frames_per_row: 5,
		duration: 4,
		x_accel: 0,
		y_accel: 0
	    },
	}
],

}
